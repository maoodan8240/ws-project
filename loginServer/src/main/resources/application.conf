akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  jvm-exit-on-fatal-error = on
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      port = 20200
    }
  }
  cluster {
    seed-nodes = ["akka.tcp://wssystem@192.168.0.56:20000"]
    roles = ["WS-LoginServer", "<DEV>"]
    join-point = "akka.tcp://wssystem@192.168.0.56:20000"

    auto-down-unreachable-after = off
  }
}

server-thread-pool-PinnedDispatcher {
  type = PinnedDispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    keep-alive-remainLockTime = 15s
    core-pool-size-min = 50
    core-pool-size-factor = 3.0
    core-pool-size-max = 500
    allow-core-timeout = on
  }
  throughput = 1
}

server-thread-pool-Dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 50
    parallelism-factor = 3.0
    parallelism-max = 100
  }
  throughput = 1
}

WS-Common-Config {
  lang = "zh"      # zh 中国简体  ko  韩国
  country = "CN"   # CN         KR
  use-net-ip-first = false
  jmx-conf {
    jmx-server-enabled = "false"
    jmx-server-host = "192.168.0.56"
    jmx-server-port = 20201
  }
  redis {
    maxTotal = 500
    maxIdlel = 1
    maxWaitSeconds = 5
    pwsd = "sa"
    masterNames = "wsmaster_A1"
    sentinelIpAndPorts = "192.168.0.56:7100,192.168.0.56:7200"
    # masterNames = "wsmaster_A1"
    # sentinelIpAndPorts = "192.168.0.243:7100,192.168.0.243:7200"
  }
  mongodb {
    host = "192.168.0.56"
    port = 29077
    userName = "sa"
    password = "sa"
    dbName = ""
    minConnectionsPerHost = 5
    connectionsPerHost = 10
  }
  planningTableData {
    tab-file-path = "/zww/d/所有SVN/双截龙/策划/数值/ServerTab/"
    db {
      uri = "jdbc:mysql://192.168.0.198:3306/"
      name = "ws"
      uname = "root"
      upswd = "root"
    }
  }
}
